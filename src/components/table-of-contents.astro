---
import type { Props } from "@/types";

const { headings } = Astro.props as Props;

const filteredHeadings = headings.filter((heading) => heading.depth <= 3);
---

{
  filteredHeadings.length > 1 && (
    <table-of-contents class="hidden md:block fixed top-1/4 right-2 lg:right-4 xl:right-6 z-10 max-w-64 max-h-[60vh] overflow-y-auto xl:max-w-64 lg:max-w-[200px] md:max-w-[180px]">
      <details open>
        <summary class="cursor-pointer text-xs font-medium text-gray-400 hover:text-gray-200 transition-colors duration-200 mb-3 list-none [&::-webkit-details-marker]:hidden">
          <span class="flex items-center">
            <svg
              class="w-3 h-3 mr-1.5 transition-transform duration-200"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 6h16M4 12h16M4 18h7"
              />
            </svg>
            Table of Contents
          </span>
        </summary>

        <nav class="bg-gray-100 dark:bg-zinc-800 border border-gray-200 dark:border-zinc-700 rounded-lg p-3 shadow-lg">
          <ul class="list-none m-0 p-0 pl-0 toc-list">
            {filteredHeadings.map((heading) => (
              <li
                class={`${heading.depth > 2 ? "ml-3" : ""} list-none m-0 p-0`}
              >
                <a
                  href={`#${heading.slug}`}
                  class={`
                    relative block break-words rounded px-1.5 py-1 mt-1 mb-1
                    text-gray-600 dark:text-gray-300 hover:primary hover:bg-primary/5 
                    transition-colors duration-200 line-clamp-2
                    [&.active]:primary 
                    ${heading.depth <= 2 ? "text-xs mt-2" : "text-[10px] mt-1"}
                  `}
                  data-toc-link
                >
                  <span aria-hidden="true" class="mr-1 no-underline">
                    #
                  </span>
                  {heading.text}
                </a>
              </li>
            ))}
          </ul>
        </nav>
      </details>
    </table-of-contents>
  )
}

<style>
  table-of-contents[open] summary svg {
    transform: rotate(90deg);
  }

  table-of-contents .toc-list {
    padding-left: 0 !important;
    margin-left: 0 !important;
  }

  table-of-contents nav::-webkit-scrollbar {
    width: 2px;
  }

  table-of-contents nav::-webkit-scrollbar-track {
    background: transparent;
  }

  table-of-contents nav::-webkit-scrollbar-thumb {
    background: rgba(var(--primary), 0.3);
    border-radius: 1px;
  }

  table-of-contents nav::-webkit-scrollbar-thumb:hover {
    background: rgba(var(--primary), 0.5);
  }
</style>

<script>
  import("@/scripts/table-of-contents");
</script>
